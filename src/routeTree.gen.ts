/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as OrganizationRouteImport } from './routes/organization/route'
import { Route as ClientRouteImport } from './routes/client/route'
import { Route as IndexImport } from './routes/index'
import { Route as OrganizationSettingsImport } from './routes/organization/settings'
import { Route as OrganizationPaymentImport } from './routes/organization/payment'
import { Route as OrganizationNetworkImport } from './routes/organization/network'
import { Route as OrganizationMarketingImport } from './routes/organization/marketing'
import { Route as OrganizationInsightsImport } from './routes/organization/insights'
import { Route as OrganizationEventsImport } from './routes/organization/events'
import { Route as OrganizationDashboardImport } from './routes/organization/dashboard'
import { Route as OrganizationCreateEventImport } from './routes/organization/create-event'
import { Route as ClientMessagesImport } from './routes/client/messages'
import { Route as ClientEventsImport } from './routes/client/events'
import { Route as ClientCalendarImport } from './routes/client/calendar'
import { Route as ClientBookingsImport } from './routes/client/bookings'
import { Route as authRegisterImport } from './routes/(auth)/register'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as OrganizationSettingsUserImport } from './routes/organization/settings.user'
import { Route as OrganizationResourceEventIdImport } from './routes/organization/resource.$eventId'
import { Route as OrganizationReportDataImport } from './routes/organization/report.$data'
import { Route as OrganizationNetworkConversationIdImport } from './routes/organization/network.$conversationId'
import { Route as OrganizationManageMembershipsEventIdImport } from './routes/organization/manage-memberships.$eventId'
import { Route as OrganizationEventsInactiveImport } from './routes/organization/events.inactive'
import { Route as OrganizationEventsAllImport } from './routes/organization/events.all'
import { Route as OrganizationEditEventIdImport } from './routes/organization/edit.$eventId'
import { Route as OrganizationCompleteEventEventIdImport } from './routes/organization/complete-event.$eventId'
import { Route as ClientMessagesConversationIdImport } from './routes/client/messages.$conversationId'
import { Route as ClientEventsEventIdImport } from './routes/client/events.$eventId'

// Create/Update Routes

const OrganizationRouteRoute = OrganizationRouteImport.update({
  id: '/organization',
  path: '/organization',
  getParentRoute: () => rootRoute,
} as any)

const ClientRouteRoute = ClientRouteImport.update({
  id: '/client',
  path: '/client',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const OrganizationSettingsRoute = OrganizationSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => OrganizationRouteRoute,
} as any)

const OrganizationPaymentRoute = OrganizationPaymentImport.update({
  id: '/payment',
  path: '/payment',
  getParentRoute: () => OrganizationRouteRoute,
} as any)

const OrganizationNetworkRoute = OrganizationNetworkImport.update({
  id: '/network',
  path: '/network',
  getParentRoute: () => OrganizationRouteRoute,
} as any)

const OrganizationMarketingRoute = OrganizationMarketingImport.update({
  id: '/marketing',
  path: '/marketing',
  getParentRoute: () => OrganizationRouteRoute,
} as any)

const OrganizationInsightsRoute = OrganizationInsightsImport.update({
  id: '/insights',
  path: '/insights',
  getParentRoute: () => OrganizationRouteRoute,
} as any)

const OrganizationEventsRoute = OrganizationEventsImport.update({
  id: '/events',
  path: '/events',
  getParentRoute: () => OrganizationRouteRoute,
} as any)

const OrganizationDashboardRoute = OrganizationDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => OrganizationRouteRoute,
} as any)

const OrganizationCreateEventRoute = OrganizationCreateEventImport.update({
  id: '/create-event',
  path: '/create-event',
  getParentRoute: () => OrganizationRouteRoute,
} as any)

const ClientMessagesRoute = ClientMessagesImport.update({
  id: '/messages',
  path: '/messages',
  getParentRoute: () => ClientRouteRoute,
} as any)

const ClientEventsRoute = ClientEventsImport.update({
  id: '/events',
  path: '/events',
  getParentRoute: () => ClientRouteRoute,
} as any)

const ClientCalendarRoute = ClientCalendarImport.update({
  id: '/calendar',
  path: '/calendar',
  getParentRoute: () => ClientRouteRoute,
} as any)

const ClientBookingsRoute = ClientBookingsImport.update({
  id: '/bookings',
  path: '/bookings',
  getParentRoute: () => ClientRouteRoute,
} as any)

const authRegisterRoute = authRegisterImport.update({
  id: '/(auth)/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const OrganizationSettingsUserRoute = OrganizationSettingsUserImport.update({
  id: '/user',
  path: '/user',
  getParentRoute: () => OrganizationSettingsRoute,
} as any)

const OrganizationResourceEventIdRoute =
  OrganizationResourceEventIdImport.update({
    id: '/resource/$eventId',
    path: '/resource/$eventId',
    getParentRoute: () => OrganizationRouteRoute,
  } as any)

const OrganizationReportDataRoute = OrganizationReportDataImport.update({
  id: '/report/$data',
  path: '/report/$data',
  getParentRoute: () => OrganizationRouteRoute,
} as any)

const OrganizationNetworkConversationIdRoute =
  OrganizationNetworkConversationIdImport.update({
    id: '/$conversationId',
    path: '/$conversationId',
    getParentRoute: () => OrganizationNetworkRoute,
  } as any)

const OrganizationManageMembershipsEventIdRoute =
  OrganizationManageMembershipsEventIdImport.update({
    id: '/manage-memberships/$eventId',
    path: '/manage-memberships/$eventId',
    getParentRoute: () => OrganizationRouteRoute,
  } as any)

const OrganizationEventsInactiveRoute = OrganizationEventsInactiveImport.update(
  {
    id: '/inactive',
    path: '/inactive',
    getParentRoute: () => OrganizationEventsRoute,
  } as any,
)

const OrganizationEventsAllRoute = OrganizationEventsAllImport.update({
  id: '/all',
  path: '/all',
  getParentRoute: () => OrganizationEventsRoute,
} as any)

const OrganizationEditEventIdRoute = OrganizationEditEventIdImport.update({
  id: '/edit/$eventId',
  path: '/edit/$eventId',
  getParentRoute: () => OrganizationRouteRoute,
} as any)

const OrganizationCompleteEventEventIdRoute =
  OrganizationCompleteEventEventIdImport.update({
    id: '/complete-event/$eventId',
    path: '/complete-event/$eventId',
    getParentRoute: () => OrganizationRouteRoute,
  } as any)

const ClientMessagesConversationIdRoute =
  ClientMessagesConversationIdImport.update({
    id: '/$conversationId',
    path: '/$conversationId',
    getParentRoute: () => ClientMessagesRoute,
  } as any)

const ClientEventsEventIdRoute = ClientEventsEventIdImport.update({
  id: '/$eventId',
  path: '/$eventId',
  getParentRoute: () => ClientEventsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/client': {
      id: '/client'
      path: '/client'
      fullPath: '/client'
      preLoaderRoute: typeof ClientRouteImport
      parentRoute: typeof rootRoute
    }
    '/organization': {
      id: '/organization'
      path: '/organization'
      fullPath: '/organization'
      preLoaderRoute: typeof OrganizationRouteImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/register': {
      id: '/(auth)/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterImport
      parentRoute: typeof rootRoute
    }
    '/client/bookings': {
      id: '/client/bookings'
      path: '/bookings'
      fullPath: '/client/bookings'
      preLoaderRoute: typeof ClientBookingsImport
      parentRoute: typeof ClientRouteImport
    }
    '/client/calendar': {
      id: '/client/calendar'
      path: '/calendar'
      fullPath: '/client/calendar'
      preLoaderRoute: typeof ClientCalendarImport
      parentRoute: typeof ClientRouteImport
    }
    '/client/events': {
      id: '/client/events'
      path: '/events'
      fullPath: '/client/events'
      preLoaderRoute: typeof ClientEventsImport
      parentRoute: typeof ClientRouteImport
    }
    '/client/messages': {
      id: '/client/messages'
      path: '/messages'
      fullPath: '/client/messages'
      preLoaderRoute: typeof ClientMessagesImport
      parentRoute: typeof ClientRouteImport
    }
    '/organization/create-event': {
      id: '/organization/create-event'
      path: '/create-event'
      fullPath: '/organization/create-event'
      preLoaderRoute: typeof OrganizationCreateEventImport
      parentRoute: typeof OrganizationRouteImport
    }
    '/organization/dashboard': {
      id: '/organization/dashboard'
      path: '/dashboard'
      fullPath: '/organization/dashboard'
      preLoaderRoute: typeof OrganizationDashboardImport
      parentRoute: typeof OrganizationRouteImport
    }
    '/organization/events': {
      id: '/organization/events'
      path: '/events'
      fullPath: '/organization/events'
      preLoaderRoute: typeof OrganizationEventsImport
      parentRoute: typeof OrganizationRouteImport
    }
    '/organization/insights': {
      id: '/organization/insights'
      path: '/insights'
      fullPath: '/organization/insights'
      preLoaderRoute: typeof OrganizationInsightsImport
      parentRoute: typeof OrganizationRouteImport
    }
    '/organization/marketing': {
      id: '/organization/marketing'
      path: '/marketing'
      fullPath: '/organization/marketing'
      preLoaderRoute: typeof OrganizationMarketingImport
      parentRoute: typeof OrganizationRouteImport
    }
    '/organization/network': {
      id: '/organization/network'
      path: '/network'
      fullPath: '/organization/network'
      preLoaderRoute: typeof OrganizationNetworkImport
      parentRoute: typeof OrganizationRouteImport
    }
    '/organization/payment': {
      id: '/organization/payment'
      path: '/payment'
      fullPath: '/organization/payment'
      preLoaderRoute: typeof OrganizationPaymentImport
      parentRoute: typeof OrganizationRouteImport
    }
    '/organization/settings': {
      id: '/organization/settings'
      path: '/settings'
      fullPath: '/organization/settings'
      preLoaderRoute: typeof OrganizationSettingsImport
      parentRoute: typeof OrganizationRouteImport
    }
    '/client/events/$eventId': {
      id: '/client/events/$eventId'
      path: '/$eventId'
      fullPath: '/client/events/$eventId'
      preLoaderRoute: typeof ClientEventsEventIdImport
      parentRoute: typeof ClientEventsImport
    }
    '/client/messages/$conversationId': {
      id: '/client/messages/$conversationId'
      path: '/$conversationId'
      fullPath: '/client/messages/$conversationId'
      preLoaderRoute: typeof ClientMessagesConversationIdImport
      parentRoute: typeof ClientMessagesImport
    }
    '/organization/complete-event/$eventId': {
      id: '/organization/complete-event/$eventId'
      path: '/complete-event/$eventId'
      fullPath: '/organization/complete-event/$eventId'
      preLoaderRoute: typeof OrganizationCompleteEventEventIdImport
      parentRoute: typeof OrganizationRouteImport
    }
    '/organization/edit/$eventId': {
      id: '/organization/edit/$eventId'
      path: '/edit/$eventId'
      fullPath: '/organization/edit/$eventId'
      preLoaderRoute: typeof OrganizationEditEventIdImport
      parentRoute: typeof OrganizationRouteImport
    }
    '/organization/events/all': {
      id: '/organization/events/all'
      path: '/all'
      fullPath: '/organization/events/all'
      preLoaderRoute: typeof OrganizationEventsAllImport
      parentRoute: typeof OrganizationEventsImport
    }
    '/organization/events/inactive': {
      id: '/organization/events/inactive'
      path: '/inactive'
      fullPath: '/organization/events/inactive'
      preLoaderRoute: typeof OrganizationEventsInactiveImport
      parentRoute: typeof OrganizationEventsImport
    }
    '/organization/manage-memberships/$eventId': {
      id: '/organization/manage-memberships/$eventId'
      path: '/manage-memberships/$eventId'
      fullPath: '/organization/manage-memberships/$eventId'
      preLoaderRoute: typeof OrganizationManageMembershipsEventIdImport
      parentRoute: typeof OrganizationRouteImport
    }
    '/organization/network/$conversationId': {
      id: '/organization/network/$conversationId'
      path: '/$conversationId'
      fullPath: '/organization/network/$conversationId'
      preLoaderRoute: typeof OrganizationNetworkConversationIdImport
      parentRoute: typeof OrganizationNetworkImport
    }
    '/organization/report/$data': {
      id: '/organization/report/$data'
      path: '/report/$data'
      fullPath: '/organization/report/$data'
      preLoaderRoute: typeof OrganizationReportDataImport
      parentRoute: typeof OrganizationRouteImport
    }
    '/organization/resource/$eventId': {
      id: '/organization/resource/$eventId'
      path: '/resource/$eventId'
      fullPath: '/organization/resource/$eventId'
      preLoaderRoute: typeof OrganizationResourceEventIdImport
      parentRoute: typeof OrganizationRouteImport
    }
    '/organization/settings/user': {
      id: '/organization/settings/user'
      path: '/user'
      fullPath: '/organization/settings/user'
      preLoaderRoute: typeof OrganizationSettingsUserImport
      parentRoute: typeof OrganizationSettingsImport
    }
  }
}

// Create and export the route tree

interface ClientEventsRouteChildren {
  ClientEventsEventIdRoute: typeof ClientEventsEventIdRoute
}

const ClientEventsRouteChildren: ClientEventsRouteChildren = {
  ClientEventsEventIdRoute: ClientEventsEventIdRoute,
}

const ClientEventsRouteWithChildren = ClientEventsRoute._addFileChildren(
  ClientEventsRouteChildren,
)

interface ClientMessagesRouteChildren {
  ClientMessagesConversationIdRoute: typeof ClientMessagesConversationIdRoute
}

const ClientMessagesRouteChildren: ClientMessagesRouteChildren = {
  ClientMessagesConversationIdRoute: ClientMessagesConversationIdRoute,
}

const ClientMessagesRouteWithChildren = ClientMessagesRoute._addFileChildren(
  ClientMessagesRouteChildren,
)

interface ClientRouteRouteChildren {
  ClientBookingsRoute: typeof ClientBookingsRoute
  ClientCalendarRoute: typeof ClientCalendarRoute
  ClientEventsRoute: typeof ClientEventsRouteWithChildren
  ClientMessagesRoute: typeof ClientMessagesRouteWithChildren
}

const ClientRouteRouteChildren: ClientRouteRouteChildren = {
  ClientBookingsRoute: ClientBookingsRoute,
  ClientCalendarRoute: ClientCalendarRoute,
  ClientEventsRoute: ClientEventsRouteWithChildren,
  ClientMessagesRoute: ClientMessagesRouteWithChildren,
}

const ClientRouteRouteWithChildren = ClientRouteRoute._addFileChildren(
  ClientRouteRouteChildren,
)

interface OrganizationEventsRouteChildren {
  OrganizationEventsAllRoute: typeof OrganizationEventsAllRoute
  OrganizationEventsInactiveRoute: typeof OrganizationEventsInactiveRoute
}

const OrganizationEventsRouteChildren: OrganizationEventsRouteChildren = {
  OrganizationEventsAllRoute: OrganizationEventsAllRoute,
  OrganizationEventsInactiveRoute: OrganizationEventsInactiveRoute,
}

const OrganizationEventsRouteWithChildren =
  OrganizationEventsRoute._addFileChildren(OrganizationEventsRouteChildren)

interface OrganizationNetworkRouteChildren {
  OrganizationNetworkConversationIdRoute: typeof OrganizationNetworkConversationIdRoute
}

const OrganizationNetworkRouteChildren: OrganizationNetworkRouteChildren = {
  OrganizationNetworkConversationIdRoute:
    OrganizationNetworkConversationIdRoute,
}

const OrganizationNetworkRouteWithChildren =
  OrganizationNetworkRoute._addFileChildren(OrganizationNetworkRouteChildren)

interface OrganizationSettingsRouteChildren {
  OrganizationSettingsUserRoute: typeof OrganizationSettingsUserRoute
}

const OrganizationSettingsRouteChildren: OrganizationSettingsRouteChildren = {
  OrganizationSettingsUserRoute: OrganizationSettingsUserRoute,
}

const OrganizationSettingsRouteWithChildren =
  OrganizationSettingsRoute._addFileChildren(OrganizationSettingsRouteChildren)

interface OrganizationRouteRouteChildren {
  OrganizationCreateEventRoute: typeof OrganizationCreateEventRoute
  OrganizationDashboardRoute: typeof OrganizationDashboardRoute
  OrganizationEventsRoute: typeof OrganizationEventsRouteWithChildren
  OrganizationInsightsRoute: typeof OrganizationInsightsRoute
  OrganizationMarketingRoute: typeof OrganizationMarketingRoute
  OrganizationNetworkRoute: typeof OrganizationNetworkRouteWithChildren
  OrganizationPaymentRoute: typeof OrganizationPaymentRoute
  OrganizationSettingsRoute: typeof OrganizationSettingsRouteWithChildren
  OrganizationCompleteEventEventIdRoute: typeof OrganizationCompleteEventEventIdRoute
  OrganizationEditEventIdRoute: typeof OrganizationEditEventIdRoute
  OrganizationManageMembershipsEventIdRoute: typeof OrganizationManageMembershipsEventIdRoute
  OrganizationReportDataRoute: typeof OrganizationReportDataRoute
  OrganizationResourceEventIdRoute: typeof OrganizationResourceEventIdRoute
}

const OrganizationRouteRouteChildren: OrganizationRouteRouteChildren = {
  OrganizationCreateEventRoute: OrganizationCreateEventRoute,
  OrganizationDashboardRoute: OrganizationDashboardRoute,
  OrganizationEventsRoute: OrganizationEventsRouteWithChildren,
  OrganizationInsightsRoute: OrganizationInsightsRoute,
  OrganizationMarketingRoute: OrganizationMarketingRoute,
  OrganizationNetworkRoute: OrganizationNetworkRouteWithChildren,
  OrganizationPaymentRoute: OrganizationPaymentRoute,
  OrganizationSettingsRoute: OrganizationSettingsRouteWithChildren,
  OrganizationCompleteEventEventIdRoute: OrganizationCompleteEventEventIdRoute,
  OrganizationEditEventIdRoute: OrganizationEditEventIdRoute,
  OrganizationManageMembershipsEventIdRoute:
    OrganizationManageMembershipsEventIdRoute,
  OrganizationReportDataRoute: OrganizationReportDataRoute,
  OrganizationResourceEventIdRoute: OrganizationResourceEventIdRoute,
}

const OrganizationRouteRouteWithChildren =
  OrganizationRouteRoute._addFileChildren(OrganizationRouteRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/client': typeof ClientRouteRouteWithChildren
  '/organization': typeof OrganizationRouteRouteWithChildren
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/client/bookings': typeof ClientBookingsRoute
  '/client/calendar': typeof ClientCalendarRoute
  '/client/events': typeof ClientEventsRouteWithChildren
  '/client/messages': typeof ClientMessagesRouteWithChildren
  '/organization/create-event': typeof OrganizationCreateEventRoute
  '/organization/dashboard': typeof OrganizationDashboardRoute
  '/organization/events': typeof OrganizationEventsRouteWithChildren
  '/organization/insights': typeof OrganizationInsightsRoute
  '/organization/marketing': typeof OrganizationMarketingRoute
  '/organization/network': typeof OrganizationNetworkRouteWithChildren
  '/organization/payment': typeof OrganizationPaymentRoute
  '/organization/settings': typeof OrganizationSettingsRouteWithChildren
  '/client/events/$eventId': typeof ClientEventsEventIdRoute
  '/client/messages/$conversationId': typeof ClientMessagesConversationIdRoute
  '/organization/complete-event/$eventId': typeof OrganizationCompleteEventEventIdRoute
  '/organization/edit/$eventId': typeof OrganizationEditEventIdRoute
  '/organization/events/all': typeof OrganizationEventsAllRoute
  '/organization/events/inactive': typeof OrganizationEventsInactiveRoute
  '/organization/manage-memberships/$eventId': typeof OrganizationManageMembershipsEventIdRoute
  '/organization/network/$conversationId': typeof OrganizationNetworkConversationIdRoute
  '/organization/report/$data': typeof OrganizationReportDataRoute
  '/organization/resource/$eventId': typeof OrganizationResourceEventIdRoute
  '/organization/settings/user': typeof OrganizationSettingsUserRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/client': typeof ClientRouteRouteWithChildren
  '/organization': typeof OrganizationRouteRouteWithChildren
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/client/bookings': typeof ClientBookingsRoute
  '/client/calendar': typeof ClientCalendarRoute
  '/client/events': typeof ClientEventsRouteWithChildren
  '/client/messages': typeof ClientMessagesRouteWithChildren
  '/organization/create-event': typeof OrganizationCreateEventRoute
  '/organization/dashboard': typeof OrganizationDashboardRoute
  '/organization/events': typeof OrganizationEventsRouteWithChildren
  '/organization/insights': typeof OrganizationInsightsRoute
  '/organization/marketing': typeof OrganizationMarketingRoute
  '/organization/network': typeof OrganizationNetworkRouteWithChildren
  '/organization/payment': typeof OrganizationPaymentRoute
  '/organization/settings': typeof OrganizationSettingsRouteWithChildren
  '/client/events/$eventId': typeof ClientEventsEventIdRoute
  '/client/messages/$conversationId': typeof ClientMessagesConversationIdRoute
  '/organization/complete-event/$eventId': typeof OrganizationCompleteEventEventIdRoute
  '/organization/edit/$eventId': typeof OrganizationEditEventIdRoute
  '/organization/events/all': typeof OrganizationEventsAllRoute
  '/organization/events/inactive': typeof OrganizationEventsInactiveRoute
  '/organization/manage-memberships/$eventId': typeof OrganizationManageMembershipsEventIdRoute
  '/organization/network/$conversationId': typeof OrganizationNetworkConversationIdRoute
  '/organization/report/$data': typeof OrganizationReportDataRoute
  '/organization/resource/$eventId': typeof OrganizationResourceEventIdRoute
  '/organization/settings/user': typeof OrganizationSettingsUserRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/client': typeof ClientRouteRouteWithChildren
  '/organization': typeof OrganizationRouteRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/register': typeof authRegisterRoute
  '/client/bookings': typeof ClientBookingsRoute
  '/client/calendar': typeof ClientCalendarRoute
  '/client/events': typeof ClientEventsRouteWithChildren
  '/client/messages': typeof ClientMessagesRouteWithChildren
  '/organization/create-event': typeof OrganizationCreateEventRoute
  '/organization/dashboard': typeof OrganizationDashboardRoute
  '/organization/events': typeof OrganizationEventsRouteWithChildren
  '/organization/insights': typeof OrganizationInsightsRoute
  '/organization/marketing': typeof OrganizationMarketingRoute
  '/organization/network': typeof OrganizationNetworkRouteWithChildren
  '/organization/payment': typeof OrganizationPaymentRoute
  '/organization/settings': typeof OrganizationSettingsRouteWithChildren
  '/client/events/$eventId': typeof ClientEventsEventIdRoute
  '/client/messages/$conversationId': typeof ClientMessagesConversationIdRoute
  '/organization/complete-event/$eventId': typeof OrganizationCompleteEventEventIdRoute
  '/organization/edit/$eventId': typeof OrganizationEditEventIdRoute
  '/organization/events/all': typeof OrganizationEventsAllRoute
  '/organization/events/inactive': typeof OrganizationEventsInactiveRoute
  '/organization/manage-memberships/$eventId': typeof OrganizationManageMembershipsEventIdRoute
  '/organization/network/$conversationId': typeof OrganizationNetworkConversationIdRoute
  '/organization/report/$data': typeof OrganizationReportDataRoute
  '/organization/resource/$eventId': typeof OrganizationResourceEventIdRoute
  '/organization/settings/user': typeof OrganizationSettingsUserRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/client'
    | '/organization'
    | '/login'
    | '/register'
    | '/client/bookings'
    | '/client/calendar'
    | '/client/events'
    | '/client/messages'
    | '/organization/create-event'
    | '/organization/dashboard'
    | '/organization/events'
    | '/organization/insights'
    | '/organization/marketing'
    | '/organization/network'
    | '/organization/payment'
    | '/organization/settings'
    | '/client/events/$eventId'
    | '/client/messages/$conversationId'
    | '/organization/complete-event/$eventId'
    | '/organization/edit/$eventId'
    | '/organization/events/all'
    | '/organization/events/inactive'
    | '/organization/manage-memberships/$eventId'
    | '/organization/network/$conversationId'
    | '/organization/report/$data'
    | '/organization/resource/$eventId'
    | '/organization/settings/user'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/client'
    | '/organization'
    | '/login'
    | '/register'
    | '/client/bookings'
    | '/client/calendar'
    | '/client/events'
    | '/client/messages'
    | '/organization/create-event'
    | '/organization/dashboard'
    | '/organization/events'
    | '/organization/insights'
    | '/organization/marketing'
    | '/organization/network'
    | '/organization/payment'
    | '/organization/settings'
    | '/client/events/$eventId'
    | '/client/messages/$conversationId'
    | '/organization/complete-event/$eventId'
    | '/organization/edit/$eventId'
    | '/organization/events/all'
    | '/organization/events/inactive'
    | '/organization/manage-memberships/$eventId'
    | '/organization/network/$conversationId'
    | '/organization/report/$data'
    | '/organization/resource/$eventId'
    | '/organization/settings/user'
  id:
    | '__root__'
    | '/'
    | '/client'
    | '/organization'
    | '/(auth)/login'
    | '/(auth)/register'
    | '/client/bookings'
    | '/client/calendar'
    | '/client/events'
    | '/client/messages'
    | '/organization/create-event'
    | '/organization/dashboard'
    | '/organization/events'
    | '/organization/insights'
    | '/organization/marketing'
    | '/organization/network'
    | '/organization/payment'
    | '/organization/settings'
    | '/client/events/$eventId'
    | '/client/messages/$conversationId'
    | '/organization/complete-event/$eventId'
    | '/organization/edit/$eventId'
    | '/organization/events/all'
    | '/organization/events/inactive'
    | '/organization/manage-memberships/$eventId'
    | '/organization/network/$conversationId'
    | '/organization/report/$data'
    | '/organization/resource/$eventId'
    | '/organization/settings/user'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ClientRouteRoute: typeof ClientRouteRouteWithChildren
  OrganizationRouteRoute: typeof OrganizationRouteRouteWithChildren
  authLoginRoute: typeof authLoginRoute
  authRegisterRoute: typeof authRegisterRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ClientRouteRoute: ClientRouteRouteWithChildren,
  OrganizationRouteRoute: OrganizationRouteRouteWithChildren,
  authLoginRoute: authLoginRoute,
  authRegisterRoute: authRegisterRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/client",
        "/organization",
        "/(auth)/login",
        "/(auth)/register"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/client": {
      "filePath": "client/route.tsx",
      "children": [
        "/client/bookings",
        "/client/calendar",
        "/client/events",
        "/client/messages"
      ]
    },
    "/organization": {
      "filePath": "organization/route.tsx",
      "children": [
        "/organization/create-event",
        "/organization/dashboard",
        "/organization/events",
        "/organization/insights",
        "/organization/marketing",
        "/organization/network",
        "/organization/payment",
        "/organization/settings",
        "/organization/complete-event/$eventId",
        "/organization/edit/$eventId",
        "/organization/manage-memberships/$eventId",
        "/organization/report/$data",
        "/organization/resource/$eventId"
      ]
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx"
    },
    "/(auth)/register": {
      "filePath": "(auth)/register.tsx"
    },
    "/client/bookings": {
      "filePath": "client/bookings.tsx",
      "parent": "/client"
    },
    "/client/calendar": {
      "filePath": "client/calendar.tsx",
      "parent": "/client"
    },
    "/client/events": {
      "filePath": "client/events.tsx",
      "parent": "/client",
      "children": [
        "/client/events/$eventId"
      ]
    },
    "/client/messages": {
      "filePath": "client/messages.tsx",
      "parent": "/client",
      "children": [
        "/client/messages/$conversationId"
      ]
    },
    "/organization/create-event": {
      "filePath": "organization/create-event.tsx",
      "parent": "/organization"
    },
    "/organization/dashboard": {
      "filePath": "organization/dashboard.tsx",
      "parent": "/organization"
    },
    "/organization/events": {
      "filePath": "organization/events.tsx",
      "parent": "/organization",
      "children": [
        "/organization/events/all",
        "/organization/events/inactive"
      ]
    },
    "/organization/insights": {
      "filePath": "organization/insights.tsx",
      "parent": "/organization"
    },
    "/organization/marketing": {
      "filePath": "organization/marketing.tsx",
      "parent": "/organization"
    },
    "/organization/network": {
      "filePath": "organization/network.tsx",
      "parent": "/organization",
      "children": [
        "/organization/network/$conversationId"
      ]
    },
    "/organization/payment": {
      "filePath": "organization/payment.tsx",
      "parent": "/organization"
    },
    "/organization/settings": {
      "filePath": "organization/settings.tsx",
      "parent": "/organization",
      "children": [
        "/organization/settings/user"
      ]
    },
    "/client/events/$eventId": {
      "filePath": "client/events.$eventId.tsx",
      "parent": "/client/events"
    },
    "/client/messages/$conversationId": {
      "filePath": "client/messages.$conversationId.tsx",
      "parent": "/client/messages"
    },
    "/organization/complete-event/$eventId": {
      "filePath": "organization/complete-event.$eventId.tsx",
      "parent": "/organization"
    },
    "/organization/edit/$eventId": {
      "filePath": "organization/edit.$eventId.tsx",
      "parent": "/organization"
    },
    "/organization/events/all": {
      "filePath": "organization/events.all.tsx",
      "parent": "/organization/events"
    },
    "/organization/events/inactive": {
      "filePath": "organization/events.inactive.tsx",
      "parent": "/organization/events"
    },
    "/organization/manage-memberships/$eventId": {
      "filePath": "organization/manage-memberships.$eventId.tsx",
      "parent": "/organization"
    },
    "/organization/network/$conversationId": {
      "filePath": "organization/network.$conversationId.tsx",
      "parent": "/organization/network"
    },
    "/organization/report/$data": {
      "filePath": "organization/report.$data.tsx",
      "parent": "/organization"
    },
    "/organization/resource/$eventId": {
      "filePath": "organization/resource.$eventId.tsx",
      "parent": "/organization"
    },
    "/organization/settings/user": {
      "filePath": "organization/settings.user.tsx",
      "parent": "/organization/settings"
    }
  }
}
ROUTE_MANIFEST_END */
